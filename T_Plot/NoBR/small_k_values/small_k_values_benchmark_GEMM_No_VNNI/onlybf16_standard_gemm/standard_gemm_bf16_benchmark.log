=== BF16 Standard GEMM Benchmark Log Started: Tue Jul 22 12:34:16 PM CEST 2025 ===
Testing einsum: km,nk->nm with M=128, N=128, varying K from 2 to 512
Only testing BF16 dtype

=== Testing k=2 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "2,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 2
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 4.42042e-05
  gflops: 1.48257
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=2 
lda=128 
ldb=2 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000337938
  time (contract): 3.24654e-06
  gflops: 20.1864
-----------------------------------
max element torch :   1.71875
max element jit :     1.71875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=4 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "4,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 4
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 4.29634e-05
  gflops: 3.05079
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=4 
lda=128 
ldb=4 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000325042
  time (contract): 4.10449e-06
  gflops: 31.9338
-----------------------------------
max element torch :   2.79688
max element jit :     2.79688
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=6 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "6,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 6
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 4.38776e-05
  gflops: 4.48082
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=6 
lda=128 
ldb=6 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000334931
  time (contract): 4.21517e-06
  gflops: 46.6429
-----------------------------------
max element torch :    3.8125
max element jit :      3.8125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=8 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "8,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 8
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 4.31014e-05
  gflops: 6.08203
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=8 
lda=128 
ldb=8 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000341298
  time (contract): 4.64241e-06
  gflops: 56.4672
-----------------------------------
max element torch :     4.375
max element jit :       4.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=10 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "10,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 10
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.02589e-05
  gflops: 6.51984
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=10 
lda=128 
ldb=10 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000350674
  time (contract): 5.17358e-06
  gflops: 63.3372
-----------------------------------
max element torch :     5.375
max element jit :       5.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=12 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "12,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 12
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 4.95526e-05
  gflops: 7.93533
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=12 
lda=128 
ldb=12 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000318099
  time (contract): 5.11759e-06
  gflops: 76.8361
-----------------------------------
max element torch :   6.15625
max element jit :     6.15625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=14 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "14,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 14
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.14761e-05
  gflops: 8.91195
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=14 
lda=128 
ldb=14 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000289364
  time (contract): 6.10038e-06
  gflops: 75.2006
-----------------------------------
max element torch :    6.1875
max element jit :      6.1875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=16 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "16,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 16
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.0968e-05
  gflops: 10.2866
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=16 
lda=128 
ldb=16 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00027618
  time (contract): 5.65082e-06
  gflops: 92.7809
-----------------------------------
max element torch :     7.875
max element jit :       7.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=18 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "18,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 18
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.22182e-05
  gflops: 11.2954
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=18 
lda=128 
ldb=18 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000331666
  time (contract): 7.02694e-06
  gflops: 83.9375
-----------------------------------
max element torch :   7.90625
max element jit :     7.90625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=20 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "20,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 20
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.02565e-05
  gflops: 13.0403
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=20 
lda=128 
ldb=20 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000315955
  time (contract): 6.20122e-06
  gflops: 105.682
-----------------------------------
max element torch :    9.0625
max element jit :      9.0625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=22 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "22,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 22
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.297e-05
  gflops: 13.6095
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=22 
lda=128 
ldb=22 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000327059
  time (contract): 7.92765e-06
  gflops: 90.9344
-----------------------------------
max element torch :     9.375
max element jit :       9.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=24 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "24,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 24
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.27175e-05
  gflops: 14.9178
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=24 
lda=128 
ldb=24 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000315059
  time (contract): 6.73927e-06
  gflops: 116.694
-----------------------------------
max element torch :   10.1875
max element jit :     10.1875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=26 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "26,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 26
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.53362e-05
  gflops: 15.3962
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=26 
lda=128 
ldb=26 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000307412
  time (contract): 8.88842e-06
  gflops: 95.8515
-----------------------------------
max element torch :   11.3125
max element jit :     11.3125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=28 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "28,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 28
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.31929e-05
  gflops: 17.2486
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=28 
lda=128 
ldb=28 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000329203
  time (contract): 7.23852e-06
  gflops: 126.753
-----------------------------------
max element torch :   13.4375
max element jit :     13.4375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=30 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "30,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 30
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.48718e-05
  gflops: 17.9152
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=30 
lda=128 
ldb=30 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000300595
  time (contract): 9.82233e-06
  gflops: 100.082
-----------------------------------
max element torch :     11.75
max element jit :       11.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=32 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "32,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 32
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.38797e-05
  gflops: 19.4614
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=32 
lda=128 
ldb=32 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000261525
  time (contract): 7.75739e-06
  gflops: 135.171
-----------------------------------
max element torch :    13.875
max element jit :      13.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=34 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "34,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 34
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.6935e-05
  gflops: 19.5682
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=34 
lda=128 
ldb=34 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000276789
  time (contract): 1.07618e-05
  gflops: 103.525
-----------------------------------
max element torch :   12.9375
max element jit :     12.9375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=36 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "36,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 36
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.57524e-05
  gflops: 21.1587
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=36 
lda=128 
ldb=36 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029698
  time (contract): 8.27811e-06
  gflops: 142.502
-----------------------------------
max element torch :   14.1875
max element jit :     14.1875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=38 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "38,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 38
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.69229e-05
  gflops: 21.8749
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=38 
lda=128 
ldb=38 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000292436
  time (contract): 1.16441e-05
  gflops: 106.937
-----------------------------------
max element torch :   14.6875
max element jit :     14.6875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=40 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "40,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 40
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.56876e-05
  gflops: 23.537
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=40 
lda=128 
ldb=40 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000329586
  time (contract): 8.78179e-06
  gflops: 149.254
-----------------------------------
max element torch :    14.625
max element jit :      14.625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=42 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "42,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 42
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.07841e-05
  gflops: 22.6417
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=42 
lda=128 
ldb=42 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000285012
  time (contract): 1.26509e-05
  gflops: 108.787
-----------------------------------
max element torch :    17.375
max element jit :      17.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=44 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "44,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 44
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.64792e-05
  gflops: 25.5279
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=44 
lda=128 
ldb=44 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00035061
  time (contract): 9.27948e-06
  gflops: 155.374
-----------------------------------
max element torch :    16.625
max element jit :      16.625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=46 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "46,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 46
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.02771e-05
  gflops: 25.0066
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=46 
lda=128 
ldb=46 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000365937
  time (contract): 1.35865e-05
  gflops: 110.943
-----------------------------------
max element torch :    17.125
max element jit :      17.125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=48 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "48,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 48
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.65264e-05
  gflops: 27.8253
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=48 
lda=128 
ldb=48 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000272565
  time (contract): 9.82081e-06
  gflops: 160.156
-----------------------------------
max element torch :    17.875
max element jit :      17.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=50 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "50,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 50
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.23565e-05
  gflops: 26.2747
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=50 
lda=128 
ldb=50 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000272949
  time (contract): 1.44842e-05
  gflops: 113.117
-----------------------------------
max element torch :    20.375
max element jit :      20.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=52 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "52,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 52
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.95013e-05
  gflops: 28.637
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=52 
lda=128 
ldb=52 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000311476
  time (contract): 1.03248e-05
  gflops: 165.034
-----------------------------------
max element torch :    19.375
max element jit :      19.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=54 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "54,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 54
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.26099e-05
  gflops: 28.2618
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=54 
lda=128 
ldb=54 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000265109
  time (contract): 1.54009e-05
  gflops: 114.894
-----------------------------------
max element torch :     19.25
max element jit :       19.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=56 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "56,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 56
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 5.95097e-05
  gflops: 30.8354
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=56 
lda=128 
ldb=56 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000260726
  time (contract): 1.08273e-05
  gflops: 169.48
-----------------------------------
max element torch :    20.625
max element jit :      20.625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=58 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "58,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 58
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.42427e-05
  gflops: 29.5838
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=58 
lda=128 
ldb=58 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000239638
  time (contract): 1.62972e-05
  gflops: 116.618
-----------------------------------
max element torch :    20.875
max element jit :      20.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=60 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "60,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 60
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.22379e-05
  gflops: 31.5898
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=60 
lda=128 
ldb=60 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000365841
  time (contract): 1.13932e-05
  gflops: 172.565
-----------------------------------
max element torch :    22.625
max element jit :      22.625
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=62 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "62,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 62
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.56273e-05
  gflops: 30.9569
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=62 
lda=128 
ldb=62 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296339
  time (contract): 1.73288e-05
  gflops: 117.24
-----------------------------------
max element torch :        22
max element jit :          22
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=64 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "64,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 64
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.35527e-05
  gflops: 32.9986
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=64 
lda=128 
ldb=64 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000312788
  time (contract): 1.19038e-05
  gflops: 176.176
-----------------------------------
max element torch :    22.875
max element jit :      22.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=66 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "66,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 66
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.597e-05
  gflops: 32.7829
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=66 
lda=128 
ldb=66 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000332722
  time (contract): 1.8176e-05
  gflops: 118.986
-----------------------------------
max element torch :     23.25
max element jit :       23.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=68 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "68,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 68
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.36369e-05
  gflops: 35.0146
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=68 
lda=128 
ldb=68 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000324499
  time (contract): 1.23243e-05
  gflops: 180.799
-----------------------------------
max element torch :    25.125
max element jit :      25.125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=70 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "70,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 70
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.64977e-05
  gflops: 34.4938
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=70 
lda=128 
ldb=70 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000303379
  time (contract): 1.90907e-05
  gflops: 120.151
-----------------------------------
max element torch :    24.125
max element jit :      24.125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=72 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "72,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 72
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.35603e-05
  gflops: 37.119
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=72 
lda=128 
ldb=72 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000309523
  time (contract): 1.28119e-05
  gflops: 184.149
-----------------------------------
max element torch :    26.125
max element jit :      26.125
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=74 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "74,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 74
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.74728e-05
  gflops: 35.9379
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=74 
lda=128 
ldb=74 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000347282
  time (contract): 1.99944e-05
  gflops: 121.275
-----------------------------------
max element torch :      26.5
max element jit :        26.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=76 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "76,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 76
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.26805e-05
  gflops: 39.7312
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=76 
lda=128 
ldb=76 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000316499
  time (contract): 1.3297e-05
  gflops: 187.288
-----------------------------------
max element torch :     27.25
max element jit :       27.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=78 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "78,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 78
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.88802e-05
  gflops: 37.1065
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=78 
lda=128 
ldb=78 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000307027
  time (contract): 2.09157e-05
  gflops: 122.2
-----------------------------------
max element torch :     28.75
max element jit :       28.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=80 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "80,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 80
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.64662e-05
  gflops: 39.4402
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=80 
lda=128 
ldb=80 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000307316
  time (contract): 1.38254e-05
  gflops: 189.611
-----------------------------------
max element torch :    26.875
max element jit :      26.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=82 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "82,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 82
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.1043e-05
  gflops: 37.8218
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=82 
lda=128 
ldb=82 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00030082
  time (contract): 2.19274e-05
  gflops: 122.54
-----------------------------------
max element torch :    27.375
max element jit :      27.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=84 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "84,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 84
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.73627e-05
  gflops: 40.8611
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=84 
lda=128 
ldb=84 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000317683
  time (contract): 1.43166e-05
  gflops: 192.26
-----------------------------------
max element torch :    28.375
max element jit :      28.375
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=86 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "86,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 86
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.13158e-05
  gflops: 39.5151
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=86 
lda=128 
ldb=86 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000307763
  time (contract): 2.27875e-05
  gflops: 123.666
-----------------------------------
max element torch :     29.25
max element jit :       29.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=88 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "88,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 88
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.82913e-05
  gflops: 42.2248
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=88 
lda=128 
ldb=88 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000309011
  time (contract): 1.48503e-05
  gflops: 194.176
-----------------------------------
max element torch :     30.25
max element jit :       30.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=90 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "90,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 90
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.40504e-05
  gflops: 39.8258
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=90 
lda=128 
ldb=90 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000302836
  time (contract): 2.37051e-05
  gflops: 124.409
-----------------------------------
max element torch :      30.5
max element jit :        30.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=92 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "92,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 92
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 6.96924e-05
  gflops: 43.2566
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=92 
lda=128 
ldb=92 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00030658
  time (contract): 1.53386e-05
  gflops: 196.541
-----------------------------------
max element torch :     30.75
max element jit :       30.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=94 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "94,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 94
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.47939e-05
  gflops: 41.1824
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=94 
lda=128 
ldb=94 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000303283
  time (contract): 2.46398e-05
  gflops: 125.009
-----------------------------------
max element torch :    30.875
max element jit :      30.875
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=96 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "96,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 96
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.22644e-05
  gflops: 43.5308
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=96 
lda=128 
ldb=96 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00030994
  time (contract): 1.58757e-05
  gflops: 198.147
-----------------------------------
max element torch :     31.75
max element jit :       31.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=98 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "98,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 98
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.54268e-05
  gflops: 42.5745
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=98 
lda=128 
ldb=98 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000247734
  time (contract): 2.55877e-05
  gflops: 125.5
-----------------------------------
max element torch :        33
max element jit :          33
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=100 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "100,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 100
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.24562e-05
  gflops: 45.2245
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=100 
lda=128 
ldb=100 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000271253
  time (contract): 1.63591e-05
  gflops: 200.305
-----------------------------------
max element torch :        33
max element jit :          33
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=102 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "102,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 102
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.75035e-05
  gflops: 43.125
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=102 
lda=128 
ldb=102 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000264821
  time (contract): 2.655e-05
  gflops: 125.888
-----------------------------------
max element torch :        33
max element jit :          33
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=104 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "104,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 104
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.33659e-05
  gflops: 46.4503
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=104 
lda=128 
ldb=104 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000311411
  time (contract): 1.68869e-05
  gflops: 201.806
-----------------------------------
max element torch :     35.25
max element jit :       35.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=106 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "106,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 106
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.95126e-05
  gflops: 43.6837
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=106 
lda=128 
ldb=106 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000288948
  time (contract): 2.76285e-05
  gflops: 125.718
-----------------------------------
max element torch :     36.25
max element jit :       36.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=108 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "108,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 108
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.4076e-05
  gflops: 47.7745
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=108 
lda=128 
ldb=108 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000256534
  time (contract): 1.73923e-05
  gflops: 203.478
-----------------------------------
max element torch :        37
max element jit :          37
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=110 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "110,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 110
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.06593e-05
  gflops: 44.6877
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=110 
lda=128 
ldb=110 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000238166
  time (contract): 2.84295e-05
  gflops: 126.787
-----------------------------------
max element torch :        37
max element jit :          37
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=112 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "112,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 112
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.50539e-05
  gflops: 48.8984
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=112 
lda=128 
ldb=112 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000254997
  time (contract): 1.80344e-05
  gflops: 203.501
-----------------------------------
max element torch :     37.25
max element jit :       37.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=114 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "114,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 114
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.25567e-05
  gflops: 45.2483
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=114 
lda=128 
ldb=114 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000263477
  time (contract): 2.93348e-05
  gflops: 127.342
-----------------------------------
max element torch :     37.25
max element jit :       37.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=116 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "116,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 116
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.7007e-05
  gflops: 49.3603
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=116 
lda=128 
ldb=116 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000249718
  time (contract): 1.84584e-05
  gflops: 205.927
-----------------------------------
max element torch :      37.5
max element jit :        37.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=118 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "118,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 118
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.14134e-05
  gflops: 47.4937
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=118 
lda=128 
ldb=118 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000241238
  time (contract): 3.0341e-05
  gflops: 127.439
-----------------------------------
max element torch :     39.25
max element jit :       39.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=120 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "120,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 120
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.79629e-05
  gflops: 50.4363
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=120 
lda=128 
ldb=120 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000322451
  time (contract): 1.89624e-05
  gflops: 207.367
-----------------------------------
max element torch :     39.75
max element jit :       39.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=122 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "122,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 122
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.45868e-05
  gflops: 47.2614
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=122 
lda=128 
ldb=122 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000286324
  time (contract): 3.139e-05
  gflops: 127.356
-----------------------------------
max element torch :      40.5
max element jit :        40.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=124 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "124,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 124
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.08924e-05
  gflops: 50.2301
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=124 
lda=128 
ldb=124 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000313332
  time (contract): 1.96144e-05
  gflops: 207.156
-----------------------------------
max element torch :     39.25
max element jit :       39.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=126 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "126,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 126
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.56289e-05
  gflops: 48.217
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=126 
lda=128 
ldb=126 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000300116
  time (contract): 3.25296e-05
  gflops: 126.923
-----------------------------------
max element torch :        41
max element jit :          41
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=128 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "128,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 128
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.10596e-05
  gflops: 51.7435
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=128 
lda=128 
ldb=128 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000254645
  time (contract): 2.02471e-05
  gflops: 207.156
-----------------------------------
max element torch :     42.25
max element jit :       42.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=130 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "130,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 130
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.8908e-05
  gflops: 43.0687
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=130 
lda=128 
ldb=130 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000417807
  time (contract): 3.34408e-05
  gflops: 127.385
-----------------------------------
max element torch :     41.75
max element jit :       41.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=132 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "132,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 132
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 7.92451e-05
  gflops: 54.5822
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=132 
lda=128 
ldb=132 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000279733
  time (contract): 2.06801e-05
  gflops: 209.156
-----------------------------------
max element torch :     45.75
max element jit :       45.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=134 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "134,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 134
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.72804e-05
  gflops: 50.3081
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=134 
lda=128 
ldb=134 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000274805
  time (contract): 3.43073e-05
  gflops: 127.988
-----------------------------------
max element torch :      42.5
max element jit :        42.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=136 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "136,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 136
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.1245e-05
  gflops: 54.852
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=136 
lda=128 
ldb=136 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000308563
  time (contract): 2.11469e-05
  gflops: 210.737
-----------------------------------
max element torch :     44.25
max element jit :       44.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=138 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "138,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 138
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.84772e-05
  gflops: 51.109
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=138 
lda=128 
ldb=138 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000288212
  time (contract): 3.519e-05
  gflops: 128.502
-----------------------------------
max element torch :      44.5
max element jit :        44.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=140 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "140,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 140
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.06861e-05
  gflops: 56.8564
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=140 
lda=128 
ldb=140 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000300212
  time (contract): 2.16058e-05
  gflops: 212.328
-----------------------------------
max element torch :        45
max element jit :          45
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=142 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "142,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 142
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.95559e-05
  gflops: 51.957
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=142 
lda=128 
ldb=142 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000298932
  time (contract): 3.59758e-05
  gflops: 129.339
-----------------------------------
max element torch :     43.75
max element jit :       43.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=144 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "144,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 144
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.30124e-05
  gflops: 56.842
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=144 
lda=128 
ldb=144 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000285109
  time (contract): 2.21567e-05
  gflops: 212.964
-----------------------------------
max element torch :      47.5
max element jit :        47.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=146 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "146,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 146
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.08409e-05
  gflops: 52.6649
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=146 
lda=128 
ldb=146 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000246774
  time (contract): 3.70658e-05
  gflops: 129.071
-----------------------------------
max element torch :        49
max element jit :          49
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=148 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "148,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 148
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.59672e-05
  gflops: 56.4129
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=148 
lda=128 
ldb=148 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000318067
  time (contract): 2.27121e-05
  gflops: 213.528
-----------------------------------
max element torch :     46.75
max element jit :       46.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=150 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "150,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 150
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.15648e-05
  gflops: 53.68
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=150 
lda=128 
ldb=150 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000286708
  time (contract): 3.81264e-05
  gflops: 128.918
-----------------------------------
max element torch :      47.5
max element jit :        47.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=152 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "152,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 152
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.47543e-05
  gflops: 58.7668
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=152 
lda=128 
ldb=152 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000269365
  time (contract): 2.3224e-05
  gflops: 214.465
-----------------------------------
max element torch :     49.25
max element jit :       49.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=154 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "154,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 154
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.47383e-05
  gflops: 53.2654
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=154 
lda=128 
ldb=154 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000249014
  time (contract): 3.8628e-05
  gflops: 130.638
-----------------------------------
max element torch :     47.75
max element jit :       47.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=156 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "156,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 156
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.71918e-05
  gflops: 58.6272
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=156 
lda=128 
ldb=156 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000303252
  time (contract): 2.35467e-05
  gflops: 217.093
-----------------------------------
max element torch :     48.75
max element jit :       48.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=158 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "158,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 158
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.64819e-05
  gflops: 53.6613
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=158 
lda=128 
ldb=158 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00024831
  time (contract): 3.98866e-05
  gflops: 129.801
-----------------------------------
max element torch :     50.75
max element jit :       50.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=160 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "160,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 160
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.79826e-05
  gflops: 59.59
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=160 
lda=128 
ldb=160 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00033269
  time (contract): 2.43107e-05
  gflops: 215.661
-----------------------------------
max element torch :      51.5
max element jit :        51.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=162 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "162,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 162
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.56965e-05
  gflops: 55.4714
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=162 
lda=128 
ldb=162 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000294068
  time (contract): 4.08558e-05
  gflops: 129.93
-----------------------------------
max element torch :     51.75
max element jit :       51.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=164 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "164,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 164
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.78925e-05
  gflops: 61.1423
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=164 
lda=128 
ldb=164 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000305075
  time (contract): 2.46429e-05
  gflops: 218.073
-----------------------------------
max element torch :     52.75
max element jit :       52.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=166 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "166,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 166
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.71099e-05
  gflops: 56.0137
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=166 
lda=128 
ldb=166 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000292692
  time (contract): 4.1822e-05
  gflops: 130.063
-----------------------------------
max element torch :     53.25
max element jit :       53.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=168 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "168,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 168
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 8.86273e-05
  gflops: 62.1143
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=168 
lda=128 
ldb=168 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000284661
  time (contract): 2.5148e-05
  gflops: 218.905
-----------------------------------
max element torch :      53.5
max element jit :        53.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=170 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "170,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 170
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000100496
  gflops: 55.4308
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=170 
lda=128 
ldb=170 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000305235
  time (contract): 4.27046e-05
  gflops: 130.444
-----------------------------------
max element torch :      54.5
max element jit :        54.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=172 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "172,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 172
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.28576e-05
  gflops: 60.6961
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=172 
lda=128 
ldb=172 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296019
  time (contract): 2.57894e-05
  gflops: 218.543
-----------------------------------
max element torch :     53.25
max element jit :       53.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=174 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "174,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 174
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.97604e-05
  gflops: 57.1533
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=174 
lda=128 
ldb=174 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029554
  time (contract): 4.3576e-05
  gflops: 130.843
-----------------------------------
max element torch :      55.5
max element jit :        55.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=176 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "176,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 176
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.3719e-05
  gflops: 61.5368
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=176 
lda=128 
ldb=176 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000262998
  time (contract): 2.62833e-05
  gflops: 219.424
-----------------------------------
max element torch :     55.25
max element jit :       55.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=178 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "178,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 178
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000101495
  gflops: 57.4676
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=178 
lda=128 
ldb=178 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00024367
  time (contract): 4.4592e-05
  gflops: 130.801
-----------------------------------
max element torch :        55
max element jit :          55
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=180 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "180,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 180
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.3962e-05
  gflops: 62.7726
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=180 
lda=128 
ldb=180 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00030146
  time (contract): 2.68186e-05
  gflops: 219.931
-----------------------------------
max element torch :     55.25
max element jit :       55.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=182 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "182,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 182
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000104114
  gflops: 57.2814
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=182 
lda=128 
ldb=182 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000270453
  time (contract): 4.55469e-05
  gflops: 130.937
-----------------------------------
max element torch :      57.5
max element jit :        57.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=184 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "184,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 184
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.58074e-05
  gflops: 62.9316
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=184 
lda=128 
ldb=184 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296404
  time (contract): 2.73104e-05
  gflops: 220.77
-----------------------------------
max element torch :     56.25
max element jit :       56.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=186 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "186,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 186
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000105077
  gflops: 58.0037
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=186 
lda=128 
ldb=186 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000282708
  time (contract): 4.64203e-05
  gflops: 131.297
-----------------------------------
max element torch :      56.5
max element jit :        56.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=188 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "188,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 188
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.88599e-05
  gflops: 62.3143
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=188 
lda=128 
ldb=188 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000331698
  time (contract): 2.7854e-05
  gflops: 221.167
-----------------------------------
max element torch :     58.25
max element jit :       58.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=190 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "190,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 190
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000104252
  gflops: 59.7199
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=190 
lda=128 
ldb=190 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000272309
  time (contract): 4.74279e-05
  gflops: 131.271
-----------------------------------
max element torch :        60
max element jit :          60
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=192 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "192,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 192
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 9.87908e-05
  gflops: 63.6847
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=192 
lda=128 
ldb=192 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000260693
  time (contract): 2.84842e-05
  gflops: 220.875
-----------------------------------
max element torch :        60
max element jit :          60
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=194 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "194,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 194
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000129915
  gflops: 48.9321
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=194 
lda=128 
ldb=194 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000447886
  time (contract): 4.83193e-05
  gflops: 131.562
-----------------------------------
max element torch :     59.25
max element jit :       59.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=196 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "196,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 196
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000100428
  gflops: 63.9516
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=196 
lda=128 
ldb=196 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000244022
  time (contract): 2.88018e-05
  gflops: 222.991
-----------------------------------
max element torch :     59.75
max element jit :       59.75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=198 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "198,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 198
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000109179
  gflops: 59.4257
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=198 
lda=128 
ldb=198 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.0002957
  time (contract): 4.94672e-05
  gflops: 131.159
-----------------------------------
max element torch :     60.25
max element jit :       60.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=200 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "200,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 200
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000100316
  gflops: 65.3298
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=200 
lda=128 
ldb=200 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000298995
  time (contract): 2.94425e-05
  gflops: 222.59
-----------------------------------
max element torch :     61.25
max element jit :       61.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=202 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "202,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 202
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000111046
  gflops: 59.6073
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=202 
lda=128 
ldb=202 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000246262
  time (contract): 5.03825e-05
  gflops: 131.378
-----------------------------------
max element torch :     61.25
max element jit :       61.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=204 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "204,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 204
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00010061
  gflops: 66.4415
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=204 
lda=128 
ldb=204 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000262901
  time (contract): 2.97765e-05
  gflops: 224.495
-----------------------------------
max element torch :     62.25
max element jit :       62.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=206 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "206,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 206
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000113593
  gflops: 59.4248
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=206 
lda=128 
ldb=206 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000255861
  time (contract): 5.13713e-05
  gflops: 131.4
-----------------------------------
max element torch :      62.5
max element jit :        62.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=208 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "208,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 208
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000103254
  gflops: 66.0097
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=208 
lda=128 
ldb=208 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000266517
  time (contract): 3.06754e-05
  gflops: 222.189
-----------------------------------
max element torch :      64.5
max element jit :        64.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=210 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "210,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 210
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000112678
  gflops: 61.0702
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=210 
lda=128 
ldb=210 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000258102
  time (contract): 5.23941e-05
  gflops: 131.337
-----------------------------------
max element torch :      64.5
max element jit :        64.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=212 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "212,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 212
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000104413
  gflops: 66.5322
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=212 
lda=128 
ldb=212 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000250934
  time (contract): 3.0815e-05
  gflops: 225.437
-----------------------------------
max element torch :     63.25
max element jit :       63.25
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=214 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "214,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 214
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000115221
  gflops: 60.8602
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=214 
lda=128 
ldb=214 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000277588
  time (contract): 5.33495e-05
  gflops: 131.442
-----------------------------------
max element torch :        66
max element jit :          66
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=216 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "216,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 216
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000106166
  gflops: 66.668
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=216 
lda=128 
ldb=216 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000344146
  time (contract): 3.15397e-05
  gflops: 224.412
-----------------------------------
max element torch :      64.5
max element jit :        64.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=218 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "218,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 218
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000116237
  gflops: 61.4554
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=218 
lda=128 
ldb=218 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000308531
  time (contract): 5.44841e-05
  gflops: 131.11
-----------------------------------
max element torch :      65.5
max element jit :        65.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=220 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "220,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 220
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000108417
  gflops: 66.4931
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=220 
lda=128 
ldb=220 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029714
  time (contract): 3.20743e-05
  gflops: 224.758
-----------------------------------
max element torch :        67
max element jit :          67
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=222 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "222,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 222
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000116673
  gflops: 62.3497
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=222 
lda=128 
ldb=222 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000272053
  time (contract): 5.51706e-05
  gflops: 131.855
-----------------------------------
max element torch :      65.5
max element jit :        65.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=224 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "224,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 224
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000114009
  gflops: 64.3809
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=224 
lda=128 
ldb=224 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000289844
  time (contract): 3.26303e-05
  gflops: 224.945
-----------------------------------
max element torch :        71
max element jit :          71
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=226 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "226,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 226
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000120429
  gflops: 61.4933
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=226 
lda=128 
ldb=226 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000304436
  time (contract): 5.61109e-05
  gflops: 131.981
-----------------------------------
max element torch :      68.5
max element jit :        68.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=228 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "228,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 228
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000112544
  gflops: 66.3841
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=228 
lda=128 
ldb=228 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000256085
  time (contract): 3.30513e-05
  gflops: 226.046
-----------------------------------
max element torch :        70
max element jit :          70
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=230 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "230,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 230
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000118179
  gflops: 63.7733
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=230 
lda=128 
ldb=230 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00026978
  time (contract): 5.68573e-05
  gflops: 132.554
-----------------------------------
max element torch :      71.5
max element jit :        71.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=232 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "232,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 232
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000111566
  gflops: 68.1406
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=232 
lda=128 
ldb=232 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000295892
  time (contract): 3.3504e-05
  gflops: 226.904
-----------------------------------
max element torch :        72
max element jit :          72
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=234 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "234,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 234
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000119547
  gflops: 64.1399
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=234 
lda=128 
ldb=234 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000317619
  time (contract): 5.79605e-05
  gflops: 132.292
-----------------------------------
max element torch :      72.5
max element jit :        72.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=236 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "236,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 236
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000113237
  gflops: 68.2927
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=236 
lda=128 
ldb=236 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000301491
  time (contract): 3.40809e-05
  gflops: 226.909
-----------------------------------
max element torch :        72
max element jit :          72
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=238 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "238,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 238
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000122625
  gflops: 63.5984
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=238 
lda=128 
ldb=238 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000355378
  time (contract): 5.87875e-05
  gflops: 132.661
-----------------------------------
max element torch :        73
max element jit :          73
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=240 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "240,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 240
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000111981
  gflops: 70.2292
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=240 
lda=128 
ldb=240 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000311572
  time (contract): 3.45942e-05
  gflops: 227.331
-----------------------------------
max element torch :      73.5
max element jit :        73.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=242 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "242,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 242
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000125941
  gflops: 62.9651
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=242 
lda=128 
ldb=242 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000495468
  time (contract): 5.96671e-05
  gflops: 132.902
-----------------------------------
max element torch :        73
max element jit :          73
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=244 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "244,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 244
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000119318
  gflops: 67.0093
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=244 
lda=128 
ldb=244 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000315123
  time (contract): 3.52279e-05
  gflops: 226.962
-----------------------------------
max element torch :        74
max element jit :          74
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=246 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "246,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 246
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000125115
  gflops: 64.4281
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=246 
lda=128 
ldb=246 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000323411
  time (contract): 6.10878e-05
  gflops: 131.956
-----------------------------------
max element torch :      75.5
max element jit :        75.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=248 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "248,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 248
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000117645
  gflops: 69.0764
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=248 
lda=128 
ldb=248 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000478125
  time (contract): 3.54377e-05
  gflops: 229.317
-----------------------------------
max element torch :      75.5
max element jit :        75.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=250 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "250,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 250
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000126162
  gflops: 64.9325
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=250 
lda=128 
ldb=250 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000318643
  time (contract): 6.1709e-05
  gflops: 132.752
-----------------------------------
max element torch :        75
max element jit :          75
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=252 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "252,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 252
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000116925
  gflops: 70.6228
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=252 
lda=128 
ldb=252 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000319219
  time (contract): 3.61471e-05
  gflops: 228.442
-----------------------------------
max element torch :      76.5
max element jit :        76.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=254 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "254,128,128" BF16
----------------------------------------
=== BF16 Standard GEMM Benchmark Log Continued: Tue Jul 22 01:13:12 PM CEST 2025 ===
Testing einsum: km,nk->nm with M=128, N=128, varying K from 254 to 512
Only testing BF16 dtype

=== Testing k=254 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "254,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 254
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000129317
  gflops: 64.3616
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=254 
lda=128 
ldb=254 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000317715
  time (contract): 6.29057e-05
  gflops: 132.31
-----------------------------------
max element torch :      77.5
max element jit :        77.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=256 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "256,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 256
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000117668
  gflops: 71.2904
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=256 
lda=128 
ldb=256 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296596
  time (contract): 3.67134e-05
  gflops: 228.489
-----------------------------------
max element torch :      77.5
max element jit :        77.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=258 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "258,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 258
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000135412
  gflops: 62.4328
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=258 
lda=128 
ldb=258 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000254005
  time (contract): 6.36139e-05
  gflops: 132.898
-----------------------------------
max element torch :        78
max element jit :          78
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=260 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "260,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 260
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00012824
  gflops: 66.4356
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=260 
lda=128 
ldb=260 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000293332
  time (contract): 3.70046e-05
  gflops: 230.233
-----------------------------------
max element torch :        78
max element jit :          78
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=262 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "262,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 262
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000134958
  gflops: 63.614
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=262 
lda=128 
ldb=262 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.0002933
  time (contract): 6.47047e-05
  gflops: 132.683
-----------------------------------
max element torch :        78
max element jit :          78
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=264 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "264,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 264
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000127749
  gflops: 67.7168
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=264 
lda=128 
ldb=264 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000302388
  time (contract): 3.75159e-05
  gflops: 230.589
-----------------------------------
max element torch :      78.5
max element jit :        78.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=266 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "266,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 266
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00013891
  gflops: 62.7477
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=266 
lda=128 
ldb=266 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296276
  time (contract): 6.58638e-05
  gflops: 132.338
-----------------------------------
max element torch :        81
max element jit :          81
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=268 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "268,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 268
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00013088
  gflops: 67.0984
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=268 
lda=128 
ldb=268 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.0002973
  time (contract): 3.81058e-05
  gflops: 230.459
-----------------------------------
max element torch :        83
max element jit :          83
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=270 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "270,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 270
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000141214
  gflops: 62.6522
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=270 
lda=128 
ldb=270 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029778
  time (contract): 6.71787e-05
  gflops: 131.699
-----------------------------------
max element torch :      83.5
max element jit :        83.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=272 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "272,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 272
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000136694
  gflops: 65.2034
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=272 
lda=128 
ldb=272 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000289588
  time (contract): 3.88846e-05
  gflops: 229.214
-----------------------------------
max element torch :        82
max element jit :          82
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=274 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "274,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 274
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000145332
  gflops: 61.7789
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=274 
lda=128 
ldb=274 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000281429
  time (contract): 6.799e-05
  gflops: 132.055
-----------------------------------
max element torch :      81.5
max element jit :        81.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=276 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "276,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 276
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000140594
  gflops: 64.3267
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=276 
lda=128 
ldb=276 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000279669
  time (contract): 3.93641e-05
  gflops: 229.752
-----------------------------------
max element torch :      80.5
max element jit :        80.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=278 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "278,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 278
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00015072
  gflops: 60.4398
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=278 
lda=128 
ldb=278 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000277525
  time (contract): 6.94896e-05
  gflops: 131.092
-----------------------------------
max element torch :        82
max element jit :          82
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=280 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "280,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 280
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.0001432
  gflops: 64.0717
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=280 
lda=128 
ldb=280 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000282228
  time (contract): 3.96471e-05
  gflops: 231.418
-----------------------------------
max element torch :        82
max element jit :          82
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=282 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "282,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 282
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000145411
  gflops: 63.5478
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=282 
lda=128 
ldb=282 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000269493
  time (contract): 7.04912e-05
  gflops: 131.088
-----------------------------------
max element torch :        85
max element jit :          85
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=284 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "284,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 284
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000146049
  gflops: 63.7193
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=284 
lda=128 
ldb=284 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000286196
  time (contract): 4.0171e-05
  gflops: 231.663
-----------------------------------
max element torch :        87
max element jit :          87
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=286 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "286,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 286
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000158952
  gflops: 58.9591
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=286 
lda=128 
ldb=286 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000289748
  time (contract): 7.11808e-05
  gflops: 131.66
-----------------------------------
max element torch :      84.5
max element jit :        84.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=288 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "288,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 288
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000142573
  gflops: 66.192
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=288 
lda=128 
ldb=288 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000236279
  time (contract): 4.08903e-05
  gflops: 230.793
-----------------------------------
max element torch :      89.5
max element jit :        89.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=290 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "290,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 290
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000150273
  gflops: 63.2365
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=290 
lda=128 
ldb=290 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000257013
  time (contract): 7.24323e-05
  gflops: 131.195
-----------------------------------
max element torch :      85.5
max element jit :        85.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=292 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "292,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 292
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000144202
  gflops: 66.3533
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=292 
lda=128 
ldb=292 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000260566
  time (contract): 4.12844e-05
  gflops: 231.764
-----------------------------------
max element torch :        89
max element jit :          89
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=294 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "294,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 294
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000149085
  gflops: 64.6194
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=294 
lda=128 
ldb=294 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000273844
  time (contract): 7.3468e-05
  gflops: 131.129
-----------------------------------
max element torch :      87.5
max element jit :        87.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=296 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "296,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 296
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00015246
  gflops: 63.6187
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=296 
lda=128 
ldb=296 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000263733
  time (contract): 4.23826e-05
  gflops: 228.852
-----------------------------------
max element torch :        87
max element jit :          87
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=298 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "298,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 298
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000153449
  gflops: 63.6357
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=298 
lda=128 
ldb=298 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000216311
  time (contract): 7.44981e-05
  gflops: 131.075
-----------------------------------
max element torch :      88.5
max element jit :        88.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=300 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "300,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 300
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00014884
  gflops: 66.0469
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=300 
lda=128 
ldb=300 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000240086
  time (contract): 4.24083e-05
  gflops: 231.804
-----------------------------------
max element torch :        87
max element jit :          87
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=302 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "302,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 302
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000164031
  gflops: 60.3295
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=302 
lda=128 
ldb=302 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000308372
  time (contract): 7.55645e-05
  gflops: 130.96
-----------------------------------
max element torch :      90.5
max element jit :        90.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=304 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "304,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 304
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000151909
  gflops: 65.5752
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=304 
lda=128 
ldb=304 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000276948
  time (contract): 4.29237e-05
  gflops: 232.074
-----------------------------------
max element torch :        90
max element jit :          90
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=306 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "306,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 306
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000163823
  gflops: 61.2065
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=306 
lda=128 
ldb=306 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029778
  time (contract): 7.68268e-05
  gflops: 130.514
-----------------------------------
max element torch :        90
max element jit :          90
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=308 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "308,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 308
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000151159
  gflops: 66.7676
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=308 
lda=128 
ldb=308 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000231863
  time (contract): 4.37029e-05
  gflops: 230.935
-----------------------------------
max element torch :        94
max element jit :          94
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=310 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "310,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 310
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000157442
  gflops: 64.5196
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=310 
lda=128 
ldb=310 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000228087
  time (contract): 7.77649e-05
  gflops: 130.626
-----------------------------------
max element torch :      94.5
max element jit :        94.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=312 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "312,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 312
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000150586
  gflops: 67.8921
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=312 
lda=128 
ldb=312 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000264917
  time (contract): 4.39015e-05
  gflops: 232.876
-----------------------------------
max element torch :      92.5
max element jit :        92.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=314 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "314,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 314
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000160136
  gflops: 64.2527
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=314 
lda=128 
ldb=314 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000265429
  time (contract): 7.89278e-05
  gflops: 130.362
-----------------------------------
max element torch :      94.5
max element jit :        94.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=316 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "316,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 316
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000152738
  gflops: 67.7936
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=316 
lda=128 
ldb=316 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000281365
  time (contract): 4.45662e-05
  gflops: 232.344
-----------------------------------
max element torch :      95.5
max element jit :        95.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=318 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "318,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 318
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000171107
  gflops: 60.8989
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=318 
lda=128 
ldb=318 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000291733
  time (contract): 8.00286e-05
  gflops: 130.206
-----------------------------------
max element torch :        92
max element jit :          92
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=320 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "320,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 320
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000153491
  gflops: 68.3151
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=320 
lda=128 
ldb=320 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000277012
  time (contract): 4.54934e-05
  gflops: 230.489
-----------------------------------
max element torch :        96
max element jit :          96
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=322 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "322,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 322
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000163989
  gflops: 64.3416
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=322 
lda=128 
ldb=322 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000281716
  time (contract): 8.1311e-05
  gflops: 129.765
-----------------------------------
max element torch :        95
max element jit :          95
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=324 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "324,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 324
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000160324
  gflops: 66.2213
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=324 
lda=128 
ldb=324 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000287029
  time (contract): 4.55816e-05
  gflops: 232.919
-----------------------------------
max element torch :      98.5
max element jit :        98.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=326 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "326,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 326
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00016498
  gflops: 64.7495
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=326 
lda=128 
ldb=326 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000287444
  time (contract): 8.21279e-05
  gflops: 130.07
-----------------------------------
max element torch :      93.5
max element jit :        93.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=328 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "328,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 328
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000159401
  gflops: 67.4268
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=328 
lda=128 
ldb=328 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000281972
  time (contract): 4.62737e-05
  gflops: 232.268
-----------------------------------
max element torch :      97.5
max element jit :        97.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=330 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "330,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 330
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000167801
  gflops: 64.4421
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=330 
lda=128 
ldb=330 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000262165
  time (contract): 8.30956e-05
  gflops: 130.133
-----------------------------------
max element torch :     100.5
max element jit :       100.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=332 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "332,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 332
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000159673
  gflops: 68.1328
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=332 
lda=128 
ldb=332 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000277301
  time (contract): 4.69519e-05
  gflops: 231.705
-----------------------------------
max element torch :        99
max element jit :          99
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=334 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "334,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 334
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000167376
  gflops: 65.3886
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=334 
lda=128 
ldb=334 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000287316
  time (contract): 8.41361e-05
  gflops: 130.081
-----------------------------------
max element torch :        98
max element jit :          98
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=336 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "336,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 336
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000160702
  gflops: 68.5122
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=336 
lda=128 
ldb=336 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00029266
  time (contract): 4.80656e-05
  gflops: 229.063
-----------------------------------
max element torch :        99
max element jit :          99
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=338 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "338,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 338
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000169281
  gflops: 65.4273
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=338 
lda=128 
ldb=338 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000287988
  time (contract): 8.52028e-05
  gflops: 129.991
-----------------------------------
max element torch :     100.5
max element jit :       100.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=340 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "340,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 340
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000167725
  gflops: 66.4249
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=340 
lda=128 
ldb=340 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000299476
  time (contract): 4.85784e-05
  gflops: 229.343
-----------------------------------
max element torch :       101
max element jit :         101
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=342 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "342,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 342
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000171653
  gflops: 65.2867
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=342 
lda=128 
ldb=342 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000237078
  time (contract): 8.61614e-05
  gflops: 130.066
-----------------------------------
max element torch :       101
max element jit :         101
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=344 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "344,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 344
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000165363
  gflops: 68.1665
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=344 
lda=128 
ldb=344 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000302004
  time (contract): 4.84408e-05
  gflops: 232.7
-----------------------------------
max element torch :       100
max element jit :         100
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=346 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "346,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 346
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000174006
  gflops: 65.1569
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=346 
lda=128 
ldb=346 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000278932
  time (contract): 8.72206e-05
  gflops: 129.989
-----------------------------------
max element torch :     101.5
max element jit :       101.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=348 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "348,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 348
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000169713
  gflops: 67.1915
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=348 
lda=128 
ldb=348 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000284788
  time (contract): 4.92014e-05
  gflops: 231.767
-----------------------------------
max element torch :     105.5
max element jit :       105.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=350 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "350,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 350
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000177477
  gflops: 64.6214
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=350 
lda=128 
ldb=350 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000284533
  time (contract): 8.83937e-05
  gflops: 129.747
-----------------------------------
max element torch :     103.5
max element jit :       103.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=352 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "352,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 352
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000164975
  gflops: 69.9156
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=352 
lda=128 
ldb=352 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000240215
  time (contract): 4.97453e-05
  gflops: 231.868
-----------------------------------
max element torch :     101.5
max element jit :       101.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=354 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "354,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 354
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000177608
  gflops: 65.3116
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=354 
lda=128 
ldb=354 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000220439
  time (contract): 8.93362e-05
  gflops: 129.845
-----------------------------------
max element torch :     101.5
max element jit :       101.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=356 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "356,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 356
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000165208
  gflops: 70.6105
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=356 
lda=128 
ldb=356 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000240182
  time (contract): 4.97138e-05
  gflops: 234.651
-----------------------------------
max element torch :       104
max element jit :         104
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=358 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "358,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 358
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000176426
  gflops: 66.4922
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=358 
lda=128 
ldb=358 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000252694
  time (contract): 9.02539e-05
  gflops: 129.977
-----------------------------------
max element torch :     105.5
max element jit :       105.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=360 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "360,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 360
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000167785
  gflops: 70.307
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=360 
lda=128 
ldb=360 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000336883
  time (contract): 5.06039e-05
  gflops: 233.114
-----------------------------------
max element torch :     105.5
max element jit :       105.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=362 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "362,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 362
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000181996
  gflops: 65.1774
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=362 
lda=128 
ldb=362 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000264853
  time (contract): 9.13235e-05
  gflops: 129.89
-----------------------------------
max element torch :       106
max element jit :         106
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=364 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "364,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 364
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00016865
  gflops: 70.7235
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=364 
lda=128 
ldb=364 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000282708
  time (contract): 5.15396e-05
  gflops: 231.425
-----------------------------------
max element torch :     106.5
max element jit :       106.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=366 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "366,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 366
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000180157
  gflops: 66.5702
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=366 
lda=128 
ldb=366 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000275956
  time (contract): 9.23962e-05
  gflops: 129.801
-----------------------------------
max element torch :       106
max element jit :         106
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=368 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "368,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 368
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000172569
  gflops: 69.877
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=368 
lda=128 
ldb=368 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000245942
  time (contract): 5.13449e-05
  gflops: 234.855
-----------------------------------
max element torch :     108.5
max element jit :       108.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=370 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "370,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 370
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000184243
  gflops: 65.8054
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=370 
lda=128 
ldb=370 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000265717
  time (contract): 9.37623e-05
  gflops: 129.307
-----------------------------------
max element torch :       109
max element jit :         109
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=372 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "372,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 372
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000171073
  gflops: 71.2545
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=372 
lda=128 
ldb=372 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000254325
  time (contract): 5.19828e-05
  gflops: 234.495
-----------------------------------
max element torch :     107.5
max element jit :       107.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=374 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "374,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 374
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000188161
  gflops: 65.1317
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=374 
lda=128 
ldb=374 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000226551
  time (contract): 9.45725e-05
  gflops: 129.586
-----------------------------------
max element torch :       107
max element jit :         107
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=376 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "376,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 376
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000171106
  gflops: 72.0068
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=376 
lda=128 
ldb=376 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000284052
  time (contract): 5.2724e-05
  gflops: 233.684
-----------------------------------
max element torch :     110.5
max element jit :       110.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=378 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "378,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 378
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000187483
  gflops: 66.0664
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=378 
lda=128 
ldb=378 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000273108
  time (contract): 9.55292e-05
  gflops: 129.66
-----------------------------------
max element torch :       110
max element jit :         110
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=380 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "380,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 380
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000171465
  gflops: 72.6205
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=380 
lda=128 
ldb=380 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000227862
  time (contract): 5.40901e-05
  gflops: 230.206
-----------------------------------
max element torch :     110.5
max element jit :       110.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=382 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "382,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 382
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00018011
  gflops: 69.4985
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=382 
lda=128 
ldb=382 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000213591
  time (contract): 9.6757e-05
  gflops: 129.369
-----------------------------------
max element torch :       111
max element jit :         111
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=384 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "384,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 384
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000183855
  gflops: 68.4391
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=384 
lda=128 
ldb=384 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000234166
  time (contract): 5.41385e-05
  gflops: 232.421
-----------------------------------
max element torch :     110.5
max element jit :       110.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=386 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "386,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 386
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00019126
  gflops: 66.1322
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=386 
lda=128 
ldb=386 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000224631
  time (contract): 9.75515e-05
  gflops: 129.659
-----------------------------------
max element torch :     111.5
max element jit :       111.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=388 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "388,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 388
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.0001807
  gflops: 70.3598
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=388 
lda=128 
ldb=388 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000296596
  time (contract): 5.49496e-05
  gflops: 231.375
-----------------------------------
max element torch :     114.5
max element jit :       114.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=390 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "390,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 390
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000195585
  gflops: 65.3399
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=390 
lda=128 
ldb=390 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000291636
  time (contract): 9.83492e-05
  gflops: 129.94
-----------------------------------
max element torch :       116
max element jit :         116
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=392 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "392,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 392
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00019745
  gflops: 65.0546
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=392 
lda=128 
ldb=392 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00043723
  time (contract): 5.50143e-05
  gflops: 233.486
-----------------------------------
max element torch :       115
max element jit :         115
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=394 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "394,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 394
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000202351
  gflops: 63.8031
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=394 
lda=128 
ldb=394 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000236439
  time (contract): 9.98828e-05
  gflops: 129.257
-----------------------------------
max element torch :     112.5
max element jit :       112.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=396 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "396,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 396
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000190417
  gflops: 68.1458
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=396 
lda=128 
ldb=396 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000353842
  time (contract): 5.48093e-05
  gflops: 236.75
-----------------------------------
max element torch :       116
max element jit :         116
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=398 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "398,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 398
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000233786
  gflops: 55.7847
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=398 
lda=128 
ldb=398 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.00028482
  time (contract): 0.000100548
  gflops: 129.706
-----------------------------------
max element torch :     117.5
max element jit :       117.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=400 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "400,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 400
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000202373
  gflops: 64.7675
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=400 
lda=128 
ldb=400 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 100000
  time (compile): 0.000246454
  time (contract): 5.58199e-05
  gflops: 234.812
-----------------------------------
max element torch :     117.5
max element jit :       117.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=402 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "402,128,128" BF16
----------------------------------------
=== BF16 Standard GEMM Benchmark Log Continued: Tue Jul 22 01:42:21 PM CEST 2025 ===
Testing einsum: km,nk->nm with M=128, N=128, varying K from 254 to 512
Only testing BF16 dtype

=== Testing k=402 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "402,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 402
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000214369
  gflops: 61.449
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=402 
lda=128 
ldb=402 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000237911
  time (contract): 0.00010191
  gflops: 129.258
-----------------------------------
max element torch :     118.5
max element jit :       118.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=404 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "404,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 404
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000194423
  gflops: 68.0901
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=404 
lda=128 
ldb=404 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000234167
  time (contract): 5.62132e-05
  gflops: 235.501
-----------------------------------
max element torch :       118
max element jit :         118
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=406 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "406,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 406
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000207628
  gflops: 64.0753
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=406 
lda=128 
ldb=406 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000209175
  time (contract): 0.000102615
  gflops: 129.647
-----------------------------------
max element torch :     117.5
max element jit :       117.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=408 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "408,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 408
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000192224
  gflops: 69.551
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=408 
lda=128 
ldb=408 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000292916
  time (contract): 5.70939e-05
  gflops: 234.164
-----------------------------------
max element torch :     120.5
max element jit :       120.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=410 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "410,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 410
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000215719
  gflops: 62.2797
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=410 
lda=128 
ldb=410 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000246582
  time (contract): 0.000103685
  gflops: 129.574
-----------------------------------
max element torch :       117
max element jit :         117
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=412 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "412,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 412
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000197432
  gflops: 68.3801
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=412 
lda=128 
ldb=412 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000266869
  time (contract): 5.7161e-05
  gflops: 236.182
-----------------------------------
max element torch :     121.5
max element jit :       121.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=414 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "414,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 414
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000216205
  gflops: 62.7457
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=414 
lda=128 
ldb=414 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000233687
  time (contract): 0.000104212
  gflops: 130.177
-----------------------------------
max element torch :     123.5
max element jit :       123.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=416 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "416,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 416
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000192223
  gflops: 70.9148
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=416 
lda=128 
ldb=416 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000254901
  time (contract): 5.83411e-05
  gflops: 233.651
-----------------------------------
max element torch :       120
max element jit :         120
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=418 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "418,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 418
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000215673
  gflops: 63.5082
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=418 
lda=128 
ldb=418 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000217207
  time (contract): 0.000105452
  gflops: 129.889
-----------------------------------
max element torch :     121.5
max element jit :       121.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=420 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "420,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 420
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000197
  gflops: 69.8606
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=420 
lda=128 
ldb=420 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000265333
  time (contract): 5.94526e-05
  gflops: 231.488
-----------------------------------
max element torch :       122
max element jit :         122
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=422 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "422,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 422
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000211598
  gflops: 65.3508
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=422 
lda=128 
ldb=422 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000264789
  time (contract): 0.000106019
  gflops: 130.43
-----------------------------------
max element torch :       123
max element jit :         123
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=424 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "424,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 424
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00020054
  gflops: 69.281
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=424 
lda=128 
ldb=424 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000262965
  time (contract): 5.8657e-05
  gflops: 236.862
-----------------------------------
max element torch :     120.5
max element jit :       120.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=426 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "426,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 426
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000220446
  gflops: 63.3224
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=426 
lda=128 
ldb=426 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.00029714
  time (contract): 0.000107647
  gflops: 129.675
-----------------------------------
max element torch :     122.5
max element jit :       122.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=428 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "428,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 428
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000204261
  gflops: 68.6608
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=428 
lda=128 
ldb=428 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000275924
  time (contract): 5.92829e-05
  gflops: 236.573
-----------------------------------
max element torch :     121.5
max element jit :       121.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=430 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "430,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 430
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000221595
  gflops: 63.5856
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=430 
lda=128 
ldb=430 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000235319
  time (contract): 0.000108146
  gflops: 130.289
-----------------------------------
max element torch :     123.5
max element jit :       123.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=432 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "432,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 432
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000201657
  gflops: 70.1974
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=432 
lda=128 
ldb=432 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000237206
  time (contract): 5.9824e-05
  gflops: 236.624
-----------------------------------
max element torch :     124.5
max element jit :       124.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=434 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "434,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 434
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000227203
  gflops: 62.593
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=434 
lda=128 
ldb=434 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000252917
  time (contract): 0.000109937
  gflops: 129.359
-----------------------------------
max element torch :     127.5
max element jit :       127.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=436 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "436,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 436
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000212471
  gflops: 67.2415
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=436 
lda=128 
ldb=436 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 10000
  time (compile): 0.000241079
  time (contract): 6.06401e-05
  gflops: 235.601
-----------------------------------
max element torch :       127
max element jit :         127
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=438 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "438,128,128" BF16
----------------------------------------
=== BF16 Standard GEMM Benchmark Log Continued: Tue Jul 22 01:43:52 PM CEST 2025 ===
Testing einsum: km,nk->nm with M=128, N=128, varying K from 254 to 512
Only testing BF16 dtype

=== Testing k=402 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "402,128,128" BF16
----------------------------------------
=== BF16 Standard GEMM Benchmark Log Continued: Tue Jul 22 01:44:48 PM CEST 2025 ===
Testing einsum: km,nk->nm with M=128, N=128, varying K from 254 to 512
Only testing BF16 dtype

=== Testing k=438 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "438,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 438
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.00023352
  gflops: 61.4611
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=438 
lda=128 
ldb=438 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000294356
  time (contract): 0.000110815
  gflops: 129.516
-----------------------------------
max element torch :     126.5
max element jit :       126.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=440 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "440,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 440
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000200991
  gflops: 71.7341
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=440 
lda=128 
ldb=440 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000291028
  time (contract): 6.06689e-05
  gflops: 237.649
-----------------------------------
max element torch :     127.5
max element jit :       127.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=442 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "442,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 442
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000227795
  gflops: 63.581
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=442 
lda=128 
ldb=442 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000263637
  time (contract): 0.00011158
  gflops: 129.804
-----------------------------------
max element torch :     126.5
max element jit :       126.5
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=444 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "444,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 444
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000203663
  gflops: 71.4365
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=444 
lda=128 
ldb=444 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000261685
  time (contract): 6.2305e-05
  gflops: 233.512
-----------------------------------
max element torch :       129
max element jit :         129
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=446 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "446,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 446
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000211688
  gflops: 69.0382
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=446 
lda=128 
ldb=446 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000265269
  time (contract): 0.000112702
  gflops: 129.674
-----------------------------------
max element torch :       129
max element jit :         129
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=448 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "448,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 448
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000208178
  gflops: 70.517
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=448 
lda=128 
ldb=448 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000234807
  time (contract): 6.2867e-05
  gflops: 233.51
-----------------------------------
max element torch :       129
max element jit :         129
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=450 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "450,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 450
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000237497
  gflops: 62.0876
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=450 
lda=128 
ldb=450 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000218423
  time (contract): 0.000113824
  gflops: 129.547
-----------------------------------
max element torch :       129
max element jit :         129
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=452 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "452,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 452
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000205766
  gflops: 71.9804
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=452 
lda=128 
ldb=452 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000217399
  time (contract): 6.35266e-05
  gflops: 233.149
-----------------------------------
max element torch :       130
max element jit :         130
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=454 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "454,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 454
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000236792
  gflops: 62.8259
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=454 
lda=128 
ldb=454 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000216759
  time (contract): 0.000115111
  gflops: 129.238
-----------------------------------
max element torch :       130
max element jit :         130
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=456 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "456,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 456
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000213115
  gflops: 70.1134
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=456 
lda=128 
ldb=456 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000279956
  time (contract): 6.32966e-05
  gflops: 236.066
-----------------------------------
max element torch :       132
max element jit :         132
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=458 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "458,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 458
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000242834
  gflops: 61.8025
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=458 
lda=128 
ldb=458 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000269717
  time (contract): 0.000116556
  gflops: 128.759
-----------------------------------
max element torch :       131
max element jit :         131
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=460 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "460,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 460
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000222779
  gflops: 67.6601
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=460 
lda=128 
ldb=460 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.00028402
  time (contract): 6.3689e-05
  gflops: 236.67
-----------------------------------
max element torch :       132
max element jit :         132
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=462 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "462,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 462
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000241952
  gflops: 62.5695
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=462 
lda=128 
ldb=462 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000287252
  time (contract): 0.000117314
  gflops: 129.045
-----------------------------------
max element torch :       133
max element jit :         133
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=464 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "464,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 464
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000216462
  gflops: 70.2404
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=464 
lda=128 
ldb=464 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.00026479
  time (contract): 6.41707e-05
  gflops: 236.936
-----------------------------------
max element torch :       131
max element jit :         131
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=466 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "466,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 466
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000240167
  gflops: 63.5803
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=466 
lda=128 
ldb=466 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000292788
  time (contract): 0.000117824
  gflops: 129.599
-----------------------------------
max element torch :       132
max element jit :         132
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=468 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "468,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 468
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000221951
  gflops: 69.0938
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=468 
lda=128 
ldb=468 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000234263
  time (contract): 6.50258e-05
  gflops: 235.836
-----------------------------------
max element torch :       137
max element jit :         137
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=470 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "470,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 470
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000244692
  gflops: 62.9403
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=470 
lda=128 
ldb=470 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000226903
  time (contract): 0.000120028
  gflops: 128.312
-----------------------------------
max element torch :       137
max element jit :         137
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=472 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "472,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 472
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000222767
  gflops: 69.429
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=472 
lda=128 
ldb=472 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000236567
  time (contract): 6.57072e-05
  gflops: 235.385
-----------------------------------
max element torch :       136
max element jit :         136
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=474 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "474,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 474
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000247756
  gflops: 62.6909
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=474 
lda=128 
ldb=474 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000258805
  time (contract): 0.000120322
  gflops: 129.087
-----------------------------------
max element torch :       138
max element jit :         138
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=476 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "476,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 476
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000226057
  gflops: 68.9984
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=476 
lda=128 
ldb=476 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000234518
  time (contract): 6.65964e-05
  gflops: 234.21
-----------------------------------
max element torch :       134
max element jit :         134
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=478 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "478,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 478
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000226188
  gflops: 69.2482
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=478 
lda=128 
ldb=478 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000394704
  time (contract): 0.000119896
  gflops: 130.639
-----------------------------------
max element torch :       136
max element jit :         136
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=480 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "480,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 480
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000253368
  gflops: 62.0783
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=480 
lda=128 
ldb=480 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000285557
  time (contract): 6.74338e-05
  gflops: 233.246
-----------------------------------
max element torch :       137
max element jit :         137
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=482 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "482,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 482
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000260851
  gflops: 60.5487
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=482 
lda=128 
ldb=482 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000260309
  time (contract): 0.000122002
  gflops: 129.458
-----------------------------------
max element torch :       136
max element jit :         136
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=484 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "484,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 484
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000226707
  gflops: 69.9568
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=484 
lda=128 
ldb=484 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000273396
  time (contract): 6.73087e-05
  gflops: 235.627
-----------------------------------
max element torch :       140
max element jit :         140
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=486 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "486,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 486
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000251162
  gflops: 63.4062
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=486 
lda=128 
ldb=486 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000270357
  time (contract): 0.000122956
  gflops: 129.52
-----------------------------------
max element torch :       136
max element jit :         136
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=488 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "488,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 488
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000226068
  gflops: 70.7345
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=488 
lda=128 
ldb=488 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000280756
  time (contract): 6.88679e-05
  gflops: 232.195
-----------------------------------
max element torch :       140
max element jit :         140
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=490 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "490,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 490
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000246301
  gflops: 65.1899
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=490 
lda=128 
ldb=490 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000256629
  time (contract): 0.00012425
  gflops: 129.226
-----------------------------------
max element torch :       141
max element jit :         141
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=492 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "492,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 492
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000229808
  gflops: 70.1536
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=492 
lda=128 
ldb=492 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000266325
  time (contract): 6.8674e-05
  gflops: 234.759
-----------------------------------
max element torch :       141
max element jit :         141
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=494 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "494,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 494
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000245022
  gflops: 66.065
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=494 
lda=128 
ldb=494 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000265109
  time (contract): 0.000125452
  gflops: 129.033
-----------------------------------
max element torch :       139
max element jit :         139
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=496 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "496,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 496
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000237936
  gflops: 68.308
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=496 
lda=128 
ldb=496 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000247318
  time (contract): 6.97883e-05
  gflops: 232.889
-----------------------------------
max element torch :       140
max element jit :         140
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=498 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "498,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 498
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000251834
  gflops: 64.7985
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=498 
lda=128 
ldb=498 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000264629
  time (contract): 0.000126385
  gflops: 129.118
-----------------------------------
max element torch :       142
max element jit :         142
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=500 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "500,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 500
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000232628
  gflops: 70.43
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=500 
lda=128 
ldb=500 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000227383
  time (contract): 7.10766e-05
  gflops: 230.512
-----------------------------------
max element torch :       141
max element jit :         141
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=502 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "502,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 502
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000252794
  gflops: 65.071
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=502 
lda=128 
ldb=502 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000215191
  time (contract): 0.000127623
  gflops: 128.892
-----------------------------------
max element torch :       142
max element jit :         142
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=504 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "504,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 504
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000248692
  gflops: 66.4076
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=504 
lda=128 
ldb=504 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000272341
  time (contract): 6.9512e-05
  gflops: 237.586
-----------------------------------
max element torch :       145
max element jit :         145
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=506 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "506,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 506
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000250599
  gflops: 66.1639
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=506 
lda=128 
ldb=506 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000263894
  time (contract): 0.00012936
  gflops: 128.174
-----------------------------------
max element torch :       147
max element jit :         147
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=508 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "508,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 508
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000254251
  gflops: 65.4713
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=508 
lda=128 
ldb=508 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000266709
  time (contract): 7.01474e-05
  gflops: 237.302
-----------------------------------
max element torch :       144
max element jit :         144
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=510 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "510,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 510
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000255533
  gflops: 65.3992
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=510 
lda=128 
ldb=510 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000264725
  time (contract): 0.000129437
  gflops: 129.111
-----------------------------------
max element torch :       143
max element jit :         143
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


=== Testing k=512 (M=128, N=128) BF16 ===
Running: OMP_NUM_THREADS=1 /home/daniel/einsum_ir/build/bench_binary "km,nk->nm" "512,128,128" BF16
----------------------------------------
running bench_binary!
parsed tensors:
  k,m
  n,k
  n,m
parsed dimension ids:
  k: 0
  m: 1
  n: 2
parsed dimension sizes:
  k: 512
  m: 128
  n: 128
dtype: BF16
The new einsum string is: km,nk->nm
at::einsum:
  time (contract): 0.000264382
  gflops: 63.4581
einsum_ir:
 gemm shape: 
m=128 
n=128 
k=512 
lda=128 
ldb=512 
ldc=128 
br_stride_a_hint=0 
br_stride_b_hint=0 
batch_reduce_size=1
repetitions: 50000
  time (compile): 0.000229111
  time (contract): 7.20764e-05
  gflops: 232.77
-----------------------------------
max element torch :       148
max element jit :         148
max difference :           0
-----------------------------------
Element-wise relative errors
Biggest relative error: 0
Torch value at max error: 0
Kernel value at max error: 0

results are close

acceptable relative error:                    0.001
finished running bench_binary!

Exit code: 0
========================================


